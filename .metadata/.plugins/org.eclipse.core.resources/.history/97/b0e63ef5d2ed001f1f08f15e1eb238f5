package HMSSystem;

import java.sql.SQLException;
import java.util.List;
import java.util.Scanner;

public class HMSApplication {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		PatientDatabase patientDatabase = new PatientDatabase();
        //DoctorDatabase doctorDatabase = new DoctorDatabase();
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("Choose category:");
            System.out.println("1 - Patient");
            //System.out.println("2 - Doctor");
            System.out.println("3 - Exit");
            int categoryChoice = scanner.nextInt();
            scanner.nextLine();
            switch (categoryChoice) {
                case 1:
                    managePatients(patientDatabase, scanner);
                    break;
//                case 2:
//                    manageDoctors(doctorDatabase, scanner);
//                    break;
                case 3:
                    System.out.println("Exiting");
                    return;
                default:
                    System.out.println("Invalid choice");
                    break;
            }
        }
    }
	private static void managePatients(PatientDatabase patientDatabase, Scanner scanner) {
        while (true) {
            System.out.println("Enter your choice:");
            System.out.println("1 - Add Patient");
            System.out.println("2 - View All Patients");
            System.out.println("3 - Update Patient");
            System.out.println("4 - Delete Patient");
            System.out.println("5 - Exit");
            int choice = scanner.nextInt();
            scanner.nextLine();
            try {
                switch (choice) {
                    case 1:
                        System.out.println("Enter patient's first name:");
                        String firstName = scanner.nextLine();
                        System.out.println("Enter patient's last name:");
                        String lastName = scanner.nextLine();
                        System.out.println("Enter patient's age:");
                        int age = scanner.nextInt();
                        scanner.nextLine(); 
                        System.out.println("Enter patient's gender:");
                        String gender = scanner.nextLine();
                        System.out.println("Enter patient's contact number:");
                        String contactNumber = scanner.nextLine();
                        Patient newPatient = new Patient(firstName, lastName, age, gender, contactNumber);
                        patientDatabase.addPatient(newPatient);
                        break;
                    case 2:
                        List<Patient> patients = patientDatabase.getAllPatients();
                        System.out.println("Patients in the database:");
                        for (Patient patient : patients) {
                            System.out.println("First Name: " + patient.getFirst_name() +
                                               ", Last Name: " + patient.getLast_name() +
                                               ", Age: " + patient.getAge() +
                                               ", Gender: " + patient.getGender() +
                                               ", Contact Number: " + patient.getContact_number());
                        }
                        break;
                    case 3:
                        System.out.println("Enter patient ID to update:");
                        int updateId = scanner.nextInt();
                        scanner.nextLine(); 
                        System.out.println("Enter patient's first name (if there is any chnage )-");
                        firstName = scanner.nextLine();
                        System.out.println("Enter patient's new last name(if there is any chnage )-");
                        lastName = scanner.nextLine();
                        System.out.println("Enter patient's new age(if there is any chnage )-");
                        age = scanner.nextInt();
                        scanner.nextLine(); 
                        System.out.println("Enter patient's gender:");
                        gender = scanner.nextLine();
                        System.out.println("Enter patient's new contact number(if there is any chnage )-");
                        contactNumber = scanner.nextLine();
                        Patient updatedPatient = new Patient(firstName, lastName, age, gender, contactNumber);
                        patientDatabase.updatePatient(updateId, updatedPatient);
                        break;
                    case 4:
                        System.out.println("Enter patient ID to delete:");
                        int deleteId = scanner.nextInt();
                        scanner.nextLine();
                        patientDatabase.deletePatient(deleteId);
                        break;
                    case 5:
                        System.out.println("Exiting");
                        return;
                    default:
                        System.out.println("Invalid choice");
                        break;
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }
//	private static void manageDoctors(DoctorDatabase doctorDatabase, Scanner scanner) {
//        while (true) {
//            System.out.println("Enter your choice:");
//            System.out.println("1 - Add Doctor");
//            System.out.println("2 - View All Doctors");
//            System.out.println("3 - Update Doctor");
//            System.out.println("4 - Delete Doctor");
//            int choice = scanner.nextInt();
//            scanner.nextLine();
//            try {
//                switch (choice) {
//                    case 1:
//                        System.out.println("Enter doctor's name:");
//                        String name = scanner.nextLine();
//                        System.out.println("Enter doctor's specialty:");
//                        String specialty = scanner.nextLine();
//                        System.out.println("Enter doctor's contact:");
//                        String contact = scanner.nextLine();
//                        Doctor newDoctor = new Doctor(name, specialty, contact);
//                        doctorDatabase.addDoctor(newDoctor);
//                        break;
//                    case 2:
//                        List<Doctor> doctors = doctorDatabase.getAllDoctors();
//                        System.out.println("Doctors in the database:");
//                        for (Doctor doctor : doctors) {
//                            System.out.println("Name: " + doctor.getName() +
//                                               ", Specialty: " + doctor.getSpecialty() +
//                                               ", Contact: " + doctor.getContact());
//                        }
//                        break;
//                    case 3:
//                        System.out.println("Enter doctor ID to update:");
//                        int updateDoctorId = scanner.nextInt();
//                        scanner.nextLine();
//                        System.out.println("Enter doctor's name (if there is any change):");
//                        String updateName = scanner.nextLine();
//                        System.out.println("Enter doctor's new specialty (if there is any change):");
//                        String updateSpecialty = scanner.nextLine();
//                        System.out.println("Enter doctor's new contact (if there is any change):");
//                        String updateContact = scanner.nextLine();
//                        Doctor updatedDoctor = new Doctor(updateName, updateSpecialty, updateContact);
//                        doctorDatabase.updateDoctor(updateDoctorId, updatedDoctor);
//                        break;
//                    case 4:
//                        System.out.println("Enter doctor ID to delete:");
//                        int deleteDoctorId = scanner.nextInt();
//                        scanner.nextLine();
//                        doctorDatabase.deleteDoctor(deleteDoctorId);
//                        break;
//                    default:
//                        System.out.println("Invalid choice");
//                        break;
//                }
//            } catch (SQLException e) {
//                e.printStackTrace();
//            }
//        }
//	}

}
